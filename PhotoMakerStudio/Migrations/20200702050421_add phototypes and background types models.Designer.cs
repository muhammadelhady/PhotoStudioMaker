// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PhotoMakerStudio.Data;

namespace PhotoMakerStudio.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20200702050421_add phototypes and background types models")]
    partial class addphototypesandbackgroundtypesmodels
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5");

            modelBuilder.Entity("PhotoMakerStudio.Model.BackgroundTypes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("BackgroundType")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("BackgroundTypes");
                });

            modelBuilder.Entity("PhotoMakerStudio.Model.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CategoryName")
                        .HasColumnType("TEXT");

                    b.HasKey("CategoryId");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("PhotoMakerStudio.Model.GalleryPhoto", b =>
                {
                    b.Property<int>("PhotoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoryFK")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PhotoLocation")
                        .HasColumnType("TEXT");

                    b.Property<string>("PhotoName")
                        .HasColumnType("TEXT");

                    b.Property<int>("PhotoViewCounter")
                        .HasColumnType("INTEGER");

                    b.HasKey("PhotoId");

                    b.HasIndex("CategoryFK");

                    b.ToTable("Gallery");
                });

            modelBuilder.Entity("PhotoMakerStudio.Model.Partner", b =>
                {
                    b.Property<int>("PartnerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("LogoLocation")
                        .HasColumnType("TEXT");

                    b.Property<string>("PartnerName")
                        .HasColumnType("TEXT");

                    b.Property<string>("PartnerWebsite")
                        .HasColumnType("TEXT");

                    b.HasKey("PartnerId");

                    b.ToTable("Partners");
                });

            modelBuilder.Entity("PhotoMakerStudio.Model.PhotoTypes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("PhotoTybe")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("PhotoTypes");
                });

            modelBuilder.Entity("PhotoMakerStudio.Model.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Mail")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("BLOB");

                    b.HasKey("ID");

                    b.ToTable("User");
                });

            modelBuilder.Entity("PhotoMakerStudio.Model.GalleryPhoto", b =>
                {
                    b.HasOne("PhotoMakerStudio.Model.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
